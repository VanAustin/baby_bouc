<?php

namespace Proxies\__CG__\AppBundle\Entity;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class Book extends \AppBundle\Entity\Book implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array properties to be lazy loaded, with keys being the property
     *            names and values being their default values
     *
     * @see \Doctrine\Common\Persistence\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = [];



    /**
     * @param \Closure $initializer
     * @param \Closure $cloner
     */
    public function __construct($initializer = null, $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return ['__isInitialized__', '' . "\0" . 'AppBundle\\Entity\\Book' . "\0" . 'id', '' . "\0" . 'AppBundle\\Entity\\Book' . "\0" . 'title', '' . "\0" . 'AppBundle\\Entity\\Book' . "\0" . 'description', '' . "\0" . 'AppBundle\\Entity\\Book' . "\0" . 'pageCount', '' . "\0" . 'AppBundle\\Entity\\Book' . "\0" . 'publishedAt', '' . "\0" . 'AppBundle\\Entity\\Book' . "\0" . 'editor', '' . "\0" . 'AppBundle\\Entity\\Book' . "\0" . 'picture', '' . "\0" . 'AppBundle\\Entity\\Book' . "\0" . 'isbn13', '' . "\0" . 'AppBundle\\Entity\\Book' . "\0" . 'isbn10', '' . "\0" . 'AppBundle\\Entity\\Book' . "\0" . 'collections', '' . "\0" . 'AppBundle\\Entity\\Book' . "\0" . 'comments', '' . "\0" . 'AppBundle\\Entity\\Book' . "\0" . 'notes', '' . "\0" . 'AppBundle\\Entity\\Book' . "\0" . 'authors', '' . "\0" . 'AppBundle\\Entity\\Book' . "\0" . 'userwishes'];
        }

        return ['__isInitialized__', '' . "\0" . 'AppBundle\\Entity\\Book' . "\0" . 'id', '' . "\0" . 'AppBundle\\Entity\\Book' . "\0" . 'title', '' . "\0" . 'AppBundle\\Entity\\Book' . "\0" . 'description', '' . "\0" . 'AppBundle\\Entity\\Book' . "\0" . 'pageCount', '' . "\0" . 'AppBundle\\Entity\\Book' . "\0" . 'publishedAt', '' . "\0" . 'AppBundle\\Entity\\Book' . "\0" . 'editor', '' . "\0" . 'AppBundle\\Entity\\Book' . "\0" . 'picture', '' . "\0" . 'AppBundle\\Entity\\Book' . "\0" . 'isbn13', '' . "\0" . 'AppBundle\\Entity\\Book' . "\0" . 'isbn10', '' . "\0" . 'AppBundle\\Entity\\Book' . "\0" . 'collections', '' . "\0" . 'AppBundle\\Entity\\Book' . "\0" . 'comments', '' . "\0" . 'AppBundle\\Entity\\Book' . "\0" . 'notes', '' . "\0" . 'AppBundle\\Entity\\Book' . "\0" . 'authors', '' . "\0" . 'AppBundle\\Entity\\Book' . "\0" . 'userwishes'];
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (Book $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy->__getLazyProperties() as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', []);
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', []);
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function getId()
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', []);

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function getTitle()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getTitle', []);

        return parent::getTitle();
    }

    /**
     * {@inheritDoc}
     */
    public function setTitle($title)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setTitle', [$title]);

        return parent::setTitle($title);
    }

    /**
     * {@inheritDoc}
     */
    public function getDescription()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDescription', []);

        return parent::getDescription();
    }

    /**
     * {@inheritDoc}
     */
    public function setDescription($description)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDescription', [$description]);

        return parent::setDescription($description);
    }

    /**
     * {@inheritDoc}
     */
    public function getPageCount()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPageCount', []);

        return parent::getPageCount();
    }

    /**
     * {@inheritDoc}
     */
    public function setPageCount($pageCount)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPageCount', [$pageCount]);

        return parent::setPageCount($pageCount);
    }

    /**
     * {@inheritDoc}
     */
    public function getPublishedAt()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPublishedAt', []);

        return parent::getPublishedAt();
    }

    /**
     * {@inheritDoc}
     */
    public function setPublishedAt($publishedAt)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPublishedAt', [$publishedAt]);

        return parent::setPublishedAt($publishedAt);
    }

    /**
     * {@inheritDoc}
     */
    public function getEditor()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getEditor', []);

        return parent::getEditor();
    }

    /**
     * {@inheritDoc}
     */
    public function setEditor($editor)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setEditor', [$editor]);

        return parent::setEditor($editor);
    }

    /**
     * {@inheritDoc}
     */
    public function getPicture()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPicture', []);

        return parent::getPicture();
    }

    /**
     * {@inheritDoc}
     */
    public function setPicture($picture)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPicture', [$picture]);

        return parent::setPicture($picture);
    }

    /**
     * {@inheritDoc}
     */
    public function getIsbn13()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getIsbn13', []);

        return parent::getIsbn13();
    }

    /**
     * {@inheritDoc}
     */
    public function setIsbn13($isbn13)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setIsbn13', [$isbn13]);

        return parent::setIsbn13($isbn13);
    }

    /**
     * {@inheritDoc}
     */
    public function getIsbn10()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getIsbn10', []);

        return parent::getIsbn10();
    }

    /**
     * {@inheritDoc}
     */
    public function setIsbn10($isbn10)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setIsbn10', [$isbn10]);

        return parent::setIsbn10($isbn10);
    }

    /**
     * {@inheritDoc}
     */
    public function getCollections()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCollections', []);

        return parent::getCollections();
    }

    /**
     * {@inheritDoc}
     */
    public function addCollection(\AppBundle\Entity\Collection $collection)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addCollection', [$collection]);

        return parent::addCollection($collection);
    }

    /**
     * {@inheritDoc}
     */
    public function removeCollection(\AppBundle\Entity\Collection $collection)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeCollection', [$collection]);

        return parent::removeCollection($collection);
    }

    /**
     * {@inheritDoc}
     */
    public function getComments()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getComments', []);

        return parent::getComments();
    }

    /**
     * {@inheritDoc}
     */
    public function addComment(\AppBundle\Entity\Comment $comment)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addComment', [$comment]);

        return parent::addComment($comment);
    }

    /**
     * {@inheritDoc}
     */
    public function removeComment(\AppBundle\Entity\Comment $comment)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeComment', [$comment]);

        return parent::removeComment($comment);
    }

    /**
     * {@inheritDoc}
     */
    public function getNotes()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getNotes', []);

        return parent::getNotes();
    }

    /**
     * {@inheritDoc}
     */
    public function addNote(\AppBundle\Entity\Note $note)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addNote', [$note]);

        return parent::addNote($note);
    }

    /**
     * {@inheritDoc}
     */
    public function removeNote(\AppBundle\Entity\Note $note)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeNote', [$note]);

        return parent::removeNote($note);
    }

    /**
     * {@inheritDoc}
     */
    public function getAuthors()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getAuthors', []);

        return parent::getAuthors();
    }

    /**
     * {@inheritDoc}
     */
    public function addAuthor(\AppBundle\Entity\Author $author)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addAuthor', [$author]);

        return parent::addAuthor($author);
    }

    /**
     * {@inheritDoc}
     */
    public function removeAuthor(\AppBundle\Entity\Author $author)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeAuthor', [$author]);

        return parent::removeAuthor($author);
    }

    /**
     * {@inheritDoc}
     */
    public function getUserwishes()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getUserwishes', []);

        return parent::getUserwishes();
    }

    /**
     * {@inheritDoc}
     */
    public function addUserwish(\AppBundle\Entity\User $user)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addUserwish', [$user]);

        return parent::addUserwish($user);
    }

    /**
     * {@inheritDoc}
     */
    public function removeUserwish(\AppBundle\Entity\User $user)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeUserwish', [$user]);

        return parent::removeUserwish($user);
    }

    /**
     * {@inheritDoc}
     */
    public function __toString()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, '__toString', []);

        return parent::__toString();
    }

}
